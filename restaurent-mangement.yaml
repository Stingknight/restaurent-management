apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment-restaurent-management
  labels:
    app: restaurent-management-app

spec:
  replicas: 1
  selector:
  # this thing connects pod to deployment matchlabels should be same in pod labels and depolyment labels
    matchLabels:
      app: restaurent-management-app
  template:
    metadata:
      labels:
        app: restaurent-management-app
    spec:
    # this label is optional
      containers:
      - name: restaurent-management-container
        image: adithyaudupa123/restaurent_management:latest
        # if new image uploads to docker repo it automatically pulls from it
        imagePullPolicy: Always

        ports:
        - containerPort: 9000
        # this env file overwrites the end field in the image
        env:
          - name: MONGODB_DATABASE
            value: "mongodb+srv://adithya:adhimongodb@practise.ddntdui.mongodb.net/?retryWrites=true&w=majority"
---

apiVersion: v1
kind: Service
metadata:
  name: restaurent-management-service
spec:
  # basically this serviice is external we should be able to connect this service 
  type: NodePort
  # this selector should match with above deployemnt or pod labels
  selector:
    app.kubernetes.io/name: restaurent-management-app 
  ports:
    - protocol: TCP
      port: 9000
      # this service target to port of pod
      targetPort: 9000
      # this service will be exposed in this port 
      nodePort: 30120


#first we need to connect deployment to pod(and container) and then deployment or pod  to service

# then if we want to connect two pods we should connect through service

